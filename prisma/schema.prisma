// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
model Test {
  id          String     @id @default(uuid())
  title       String
  description String?
  createdAt   DateTime   @default(now())
  questions   Question[] // 1-to-many relationship
  teacherId   String?
  teacher     Teacher?   @relation(fields: [teacherId], references: [id])
   results     TestResult[]
}

model Question {
  id        String   @id @default(uuid())
  testId    String
  test      Test     @relation(fields: [testId], references: [id]) 
  question  String
  options   String[]
  answer    String
  timer     Int      @default(10)
  createdAt DateTime @default(now())
}

model TestResult {
  id             String   @id @default(uuid())
  studentId      String
  student        Student  @relation(fields: [studentId], references: [id])
  testId         String
  test           Test     @relation(fields: [testId], references: [id])
  questionId     String
  selectedAnswer String
  isCorrect      Boolean
  timestamp      DateTime @default(now())
}


model Teacher {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  tests     Test[]   // 1-to-many relationship with Test
  createdAt DateTime @default(now())
}

model Student {
  id         String        @id @default(uuid())
  name       String
  email      String        @unique
  password   String
  createdAt  DateTime      @default(now())
  results    TestResult[]  // 1-to-many answers submitted
}

